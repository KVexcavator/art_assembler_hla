Несколько операторов HLA требуют логического (истинного или ложного) выражения для управления их выполнением.
flag_specification
!flag_specification
register
!register
Boolean_variable
!Boolean_variable
mem_reg relop mem_reg_const
register in LowConst..HiConst
register not in LowConst..HiConst
-----------------------------------------------
Символы для flag_specification
Символ\ Значение\         Объяснение
@c      Перенос(Carry)    Истина, если перенос установлен (1); ложь, если перенос очищен (0).
@nc     Нет переноса      Истина, если перенос очищен (0); ложь, если перенос установлен (1).
@z      Ноль(zero)        Истина, если флаг нуля установлен; ложь, если он очищен.
@nz     Не ноль           Истина, если флаг нуля очищен; ложь, если он установлен.
@o      Переполнение(Overflow) Истина, если флаг переполнения установлен; ложь, если он очищен.
@no     Нет переполнения  Истина, если флаг переполнения очищен; ложь, если он установлен.
@s      Знак(Sing)        Истина, если флаг знака установлен; ложь, если он очищен.
@ns     Нет знака         Истина, если флаг знака очищен; ложь, если он установлен.
------------------------------------------------
Допустимые булевы выражения
Левый операнд\ Оператор отношения\ Правый операнд
Переменная    = or ==    Переменная, регистр
памяти        <> or !=    или константа
или регистр   <
              <=
              >
              >=

* если левый операнд — регистр, а правый операнд — положительная константа или другой регистр, HLA использует беззнаковое сравнение
* a <> b not equal
------------------------------------------------
Операторы in и not in позволяют вам проверить регистр, чтобы увидеть, находится ли он в указанном диапазоне. Например, выражение eax in 2000..2099 оценивается как истинное, если значение в регистре EAX находится в диапазоне от 2000 до 2099 (включительно). Оператор not in (два слова) проверяет, находится ли значение в регистре за пределами указанного диапазона. Например, al not in 'a'..'z' оценивается как истинное, если символ в регистре AL не является строчным буквенным символом.
-----------------------------------------------------
